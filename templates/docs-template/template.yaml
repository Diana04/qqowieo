apiVersion: backstage.io/v1beta2
kind: Template
# some metadata about the template itself
metadata:
  name: tmna-docs-template
  title: TMNA Docs Template
  description: Create a new standalone documentation project
spec:
  owner: backstage/techdocs-core
  type: documentation

  # these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Fill in some steps
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
        description:
          title: Description
          type: string
          description: Description of the component
    - title: Choose a location
      required:
        - host
        - owner
        - repository
      properties:
#        repoUrl:
#          title: Repository Location
#          type: string
#          ui:field: RepoUrlPicker
#          ui:options:
#            allowedHosts:
#              - github.com
        host:
          title: Host
          description: The host where the repository will be created
          type: string
          enum:
            - github.com
        owner:
          title: Owner
          description: The organization, user or project that this repo will belong to
          type: string
          default: Toyota-Motor-North-America
#          ui:disabled: true
        repository:
          title: Repository
          description: The name of the repository
          type: string

  # here's the steps that are executed in series in the scaffolder backend
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:cookiecutter
      input:
        url: .
        values:
          name: '{{ parameters.name }}'
          owner: '{{ parameters.owner }}'
          description: '{{ parameters.description }}'

#    - id: fetch-docs
#      name: Fetch Docs
#      action: fetch:plain
#      input:
#        targetPath: ./community
#        url: https://github.com/backstage/community/tree/main/backstage-community-sessions

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: 'This is {{ parameters.name }}'
        repoUrl: '{{ parameters.host }}?owner={{ parameters.owner }}&repo={{ parameters.repository }}'

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: '{{ steps.publish.output.repoContentsUrl }}'
        catalogInfoPath: '/catalog-info.yaml'
